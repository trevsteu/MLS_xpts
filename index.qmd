---
title: "MLS Expected Points"
author: Trevor S.
format: html
editor: visual
---

# Motivation:

Note that his project is a work in progress. I will update as I have the time.

# Setup:

```{r, results = "hide", message=FALSE, warning=FALSE}
library(tidyr)
library(tidyverse)
library(gt)
library(rvest)
library(dplyr)
library(scales)
library(reactable)
```

# Code:

```{r, warning = FALSE, message=FALSE}
url <- str_glue("https://fbref.com/en/comps/22/2025/schedule/2025-Major-League-Soccer-Scores-and-Fixtures")

n <- 10000 # number of times to simulate each match
set.seed(2025) # for reproducibility


html <- read_html(url)
html_table <- html |> 
  html_element("table") |> 
  html_table() 

head(html_table)

data <- html_table |> 
  janitor::clean_names() |> 
  filter(date != "Date" & score != "") |>
  separate_wider_regex(score, patterns = c(home_score = "[0-9]+", "â€“", 
                                    away_score = "[0-9]+")) |>
    select("date", "home", "home_xg" = "x_g", "home_score", 
           "away_score", "away_xg" = "x_g_2", "away") |> 
    mutate("home_pts" = ifelse(home_score > away_score, 3, 
                             ifelse(home_score == away_score, 1, 0)), 
         "away_pts" = ifelse(away_score > home_score, 3, 
                             ifelse(away_score == home_score, 1, 0))) |>
  type_convert()

head(data)

home_xpts <- rep(NA, times = nrow(data))
away_xpts <- rep(NA, times = nrow(data))
for(i in 1:nrow(data)){
  home_sim <- rpois(n, data$home_xg[i])
  away_sim <- rpois(n, data$away_xg[i])
  home_xpts[i] <- (3 * sum(home_sim > away_sim) + sum(home_sim == away_sim))/n
  away_xpts[i] <- (3 * sum(away_sim > home_sim) + sum(away_sim == home_sim))/n
}

# combine table of results with simulated results
data <- cbind(data, home_xpts, away_xpts) 

xpts_table <- data |>
  pivot_longer(cols = c("home", "away"), values_to = "team") |> 
  mutate("pts" = ifelse(name == "home", home_pts, away_pts),
         "xpts" = ifelse(name == "home", home_xpts, away_xpts), 
         "xg_for" = ifelse(name == "home", home_xg, away_xg), 
         "xg_ag" = ifelse(name == "home", away_xg, home_xg), 
         "scored" = ifelse(name == "home", home_score, away_score), 
         "against" = ifelse(name == "home", away_score, home_score), 
         "pts_over_exp" = pts - xpts) |>
  group_by(team) |> 
  summarize(gp = n(), across(scored:xpts, \(x) round(mean(x), 3)), 
            pts_over_exp = round(sum(pts_over_exp), 3)) |> 
  arrange(desc(xpts)) 
```

# Expected Points Table

```{r}
# use reactable to allow for interactive sorting
reactable(xpts_table, pagination = FALSE)
```

# Whitecaps Matches

```{r}
set.seed(2025)
vwfc_matches <- data |> 
  filter(home == "Vancouver W'caps" | away == "Vancouver W'caps") |> 
  mutate(opponent = ifelse(home == "Vancouver W'caps", str_c("vs ", away), 
                           str_c("@ ", home)), 
         vwfc_gf = ifelse(home == "Vancouver W'caps", home_score, away_score),
         vwfc_ga = ifelse(home == "Vancouver W'caps", away_score, home_score),
         vwfc_xgf = ifelse(home == "Vancouver W'caps", home_xg, away_xg),
         vwfc_xga = ifelse(home == "Vancouver W'caps", away_xg, home_xg),
         res = ifelse(vwfc_gf > vwfc_ga, "W", 
                      ifelse(vwfc_gf == vwfc_ga, "D", "L")), 
         result = str_c(vwfc_gf, "-", vwfc_ga, " ", res))|> 
  select(date, opponent, result, vwfc_xgf, vwfc_xga)

vwfc_pwin <- rep(NA, times = nrow(vwfc_matches))
vwfc_pdraw <- rep(NA, times = nrow(vwfc_matches))
vwfc_xpts <- rep(NA, times = nrow(vwfc_matches))
for(i in 1:nrow(vwfc_matches)){
  vwfc_sim <- rpois(n, vwfc_matches$vwfc_xgf[i])
  opp_sim <- rpois(n, vwfc_matches$vwfc_xga[i])
  vwfc_pwin[i] <- label_percent(accuracy = 0.01)(round(sum(vwfc_sim > opp_sim) / n, 4))
  vwfc_pdraw[i] <- label_percent(accuracy = 0.01)(round(sum(vwfc_sim == opp_sim) / n, 4))
  vwfc_xpts[i] <- round((3*sum(vwfc_sim > opp_sim) + 
                          sum(vwfc_sim == opp_sim))/n, 3)
}
vwfc_matches <- cbind(vwfc_matches, vwfc_pwin, vwfc_pdraw, vwfc_xpts)

vwfc_matches |> 
  select("Date" = date, "Opponent" = opponent, "Result" = result, 
         "xGF" = vwfc_xgf, "xGA" = vwfc_xga, "xPts" = vwfc_xpts, 
         "VWFC Win" = vwfc_pwin, "VWFC Draw" = vwfc_pdraw) |> 
  gt()
```
